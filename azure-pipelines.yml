trigger:
- master

pool:
  vmImage: ubuntu-latest

name: $(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

stages:
- stage: continous_integration
  jobs:
  - job: jb_build_application
    displayName: task's nodejs
    steps:
      - task: Npm@1
        name: ts_get_dependencies
        continueOnError: false
        inputs:
          command: 'install'
      - task: Npm@1
        continueOnError: false
        name: ts_build_application
        inputs:
          command: 'custom'
          customCommand: 'run build'
      - task: Npm@1
        continueOnError: false
        name: ts_unit_test
        inputs:
          command: 'custom'
          customCommand: 'run test-ci'
      # Prepare Analysis Configuration task
      - task: SonarQubePrepare@4
        inputs:
          SonarQube: 'sonarqube'
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: 'angular-azure-devops'
          cliProjectName: 'angular-azure-devops'
          cliSources: '.'
          extraProperties: |
            sonar.typescript.lcov.reportPaths=coverage/lcov.info
            sonar.projectVersion=$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
      # Run Code Analysis task
      - task: SonarQubeAnalyze@4
      # Publish Quality Gate Result task
      - task: SonarQubePublish@4
        inputs:
          pollingTimeoutSec: '300'

- stage: build_and_push_images
  jobs:
  - job: docker_tasks
    steps:
      - script: 'docker build -t haroldo89/azure-devops:$(Build.BuildId)'
        name: build_image
        continueOnError: false
      # - task: Docker@2
      #   displayName: build_image
      #   inputs:
      #     containerRegistry: 'docker-haroldo89'
      #     repository: 'haroldo89/azure-devops'
      #     command: 'build'
      #     Dockerfile: '**/Dockerfile'
      - task: Docker@2
        displayName: push_image
        inputs:
          containerRegistry: 'docker-haroldo89'
          repository: 'haroldo89/azure-devops'
          command: 'push'

- stage: Deploy
  jobs:
  - job: Deploy
    steps:
    - script: echo Deploying the code!